AWSTemplateFormatVersion: 2010-09-09

Parameters:

  Environment:
    Type: String
    AllowedValues:
      - development
      - production
      - staging
      - testing

  ImageBucketName:
    Type: String

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  VpcId:
    Type: AWS::EC2::VPC::Id


Mappings:

  BatchComputeEnvironmentParams:
    production:
      ImageId: ami-0e5dfe8e66639e477
      KeyPair: school-of-ai-transfer-learning
      MaxvCpus: 12


Resources:

  JobDoneSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}-style-transfer-job-done
      VisibilityTimeout: 60

  BatchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${Environment}-style-transfer-agent
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-style-transfer-agent

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::Region}-${Environment}-style-transfer-agent-service-v1
      Path: !Sub /${AWS::Region}/${Environment}/style-transfer/agent/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
      # TODO: Write less horribly permissive policy
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  BatchInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::Region}-${Environment}-style-transfer-agent-instance-v1
      Path: !Sub /${AWS::Region}/${Environment}/style-transfer/agent/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      # TODO: Write less horribly permissive policy
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  BatchInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${Environment}-style-transfer-agent-instance
      Path: !Sub /${AWS::Region}/${Environment}/style-transfer/agent/
      Roles:
        - !Ref BatchInstanceRole

  BatchComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: !Sub ${Environment}-style-transfer-agent
      Type: MANAGED
      State: ENABLED
      ServiceRole: !GetAtt BatchServiceRole.Arn
      ComputeResources:
        Type: EC2
        ImageId: !FindInMap [BatchComputeEnvironmentParams, !Ref Environment, ImageId]
        Ec2KeyPair: !FindInMap [BatchComputeEnvironmentParams, !Ref Environment, KeyPair]
        InstanceTypes:
          - p2.xlarge
        MinvCpus: 4
        MaxvCpus: !FindInMap [BatchComputeEnvironmentParams, !Ref Environment, MaxvCpus]
        DesiredvCpus: 4
        SecurityGroupIds:
          - !Ref BatchSecurityGroup
        Subnets: !Ref SubnetIds
        InstanceRole: !Ref BatchInstanceProfile

  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    DependsOn: BatchComputeEnvironment
    Properties:
      JobQueueName: !Sub ${Environment}-style-transfer-agent
      State: ENABLED
      Priority: 1
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Sub ${Environment}-style-transfer-agent

  BatchJobRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::Region}-${Environment}-style-transfer-agent-job-v1
      Path: !Sub /${AWS::Region}/${Environment}/style-transfer/agent/
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::Region}-${Environment}-style-transfer-agent-job
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${ImageBucketName}/private/input/*
                  - !Sub arn:aws:s3:::${ImageBucketName}/public/input/*
                  - !Sub arn:aws:s3:::${ImageBucketName}/style/*
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${ImageBucketName}/private/output/*
                  - !Sub arn:aws:s3:::${ImageBucketName}/public/output/*

  BatchJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      JobDefinitionName: !Sub ${Environment}-style-transfer-agent
      Type: container
      ContainerProperties:
        Image: sjawhar/neural-style-transfer-agent
        Environment:
          - Name: IMAGE_BUCKET_NAME
            Value: !Ref ImageBucketName
          - Name: JOB_DONE_QUEUE_URL
            Value: !Ref JobDoneSqsQueue
        Privileged: true
        ReadonlyRootFilesystem: true
        MountPoints:
          - ReadOnly: false
            SourceVolume: nvidia
            ContainerPath: /usr/local/nvidia
        Volumes:
          - Host:
              SourcePath: /var/lib/nvidia-docker/volumes/nvidia_driver/latest
            Name: nvidia
        Vcpus: 4
        Memory: 48000
        JobRoleArn: !Ref BatchJobRole
        Command: [--style, 'Ref::style', --request-id, 'Ref::requestId', 'Ref::contentKey']


Outputs:

  DoneQueueUrl:
    Value: !Ref JobDoneSqsQueue

  JobDefinitionArn:
    Value: !Ref BatchJobDefinition

  StartQueueArn:
    Value: !Ref BatchJobQueue
