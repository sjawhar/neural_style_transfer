AWSTemplateFormatVersion: 2010-09-09

Parameters:

  Environment:
    Type: String
    AllowedValues:
      - development
      - production
      - staging
      - testing

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  ServerClusterSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id

  VpcId:
    Type: AWS::EC2::VPC::Id


Mappings:

  ClusterParams:
    production:
      NodeType: cache.m4.large
      NodeCount: 1


Resources:

  SubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Group of subnets to place Redis into
      SubnetIds: !Ref SubnetIds

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${Environment}-style-transfer-redis
      VpcId: !Ref VpcId

  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from server cluster containers
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 6379
      ToPort: 6379
      SourceSecurityGroupId: !Ref ServerClusterSecurityGroupId

  Cluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      Engine: redis
      CacheNodeType: !FindInMap [ClusterParams, !Ref Environment, NodeType]
      NumCacheNodes: !FindInMap [ClusterParams, !Ref Environment, NodeCount]
      CacheSubnetGroupName: !Ref SubnetGroup
      VpcSecurityGroupIds:
        - !GetAtt SecurityGroup.GroupId
