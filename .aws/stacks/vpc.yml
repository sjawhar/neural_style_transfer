AWSTemplateFormatVersion: 2010-09-09

Parameters:

  Environment:
    Type: String
    AllowedValues:
      - development
      - production
      - staging
      - testing


Mappings:

  CidrBlocks:
    production:
      Vpc: 10.0.0.0/16
      PublicSubnetOne: 10.0.0.0/24
      PublicSubnetTwo: 10.0.1.0/24
      PrivateSubnetOne: 10.0.10.0/24
      PrivateSubnetTwo: 10.0.11.0/24


Resources:

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap [CidrBlocks, !Ref Environment, Vpc]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-style-transfer

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-style-transfer-public

  PublicDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetOne:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../partials/subnet.yml
      Parameters:
        AvailabilityZone: !Select [0, !GetAZs '']
        Cidr: !FindInMap [CidrBlocks, !Ref Environment, PublicSubnetOne]
        CreateNatGateway: 'yes'
        Environment: !Ref Environment
        Name: style-transfer-public-az1
        RouteTableId: !Ref PublicRouteTable
        SubnetType: public
        VpcId: !Ref Vpc

  PublicSubnetTwo:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../partials/subnet.yml
      Parameters:
        AvailabilityZone: !Select [1, !GetAZs '']
        Cidr: !FindInMap [CidrBlocks, !Ref Environment, PublicSubnetTwo]
        CreateNatGateway: 'yes'
        Environment: !Ref Environment
        Name: style-transfer-public-az2
        RouteTableId: !Ref PublicRouteTable
        SubnetType: public
        VpcId: !Ref Vpc

  PrivateSubnetOne:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../partials/subnet.yml
      Parameters:
        AvailabilityZone: !Select [0, !GetAZs '']
        Cidr: !FindInMap [CidrBlocks, !Ref Environment, PrivateSubnetOne]
        CreateNatGateway: 'no'
        Environment: !Ref Environment
        Name: style-transfer-private-az1
        RouteTableId: !GetAtt PublicSubnetOne.Outputs.NatRouteTableId
        SubnetType: private
        VpcId: !Ref Vpc

  PrivateSubnetTwo:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../partials/subnet.yml
      Parameters:
        AvailabilityZone: !Select [1, !GetAZs '']
        Cidr: !FindInMap [CidrBlocks, !Ref Environment, PrivateSubnetTwo]
        CreateNatGateway: 'no'
        Environment: !Ref Environment
        Name: style-transfer-private-az2
        RouteTableId: !GetAtt PublicSubnetTwo.Outputs.NatRouteTableId
        SubnetType: private
        VpcId: !Ref Vpc


Outputs:

  PrivateSubnetIds:
    Value: !Join
      - ','
      - - !GetAtt PrivateSubnetOne.Outputs.SubnetId
        - !GetAtt PrivateSubnetTwo.Outputs.SubnetId

  PublicSubnetIds:
    Value: !Join
      - ','
      - - !GetAtt PublicSubnetOne.Outputs.SubnetId
        - !GetAtt PublicSubnetTwo.Outputs.SubnetId

  VpcId:
    Value: !Ref Vpc
